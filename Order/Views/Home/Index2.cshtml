<header>
    <h1>@ViewBag.Title</h1>
</header>



@section scripts {

    @*@Scripts.Render("~/bundles/knockout")
@Scripts.Render("~/bundles/jqueryval")*@



    <script src="~/Scripts/knockout-2.2.0.js"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.2.0.debug.js")" type="text/javascript"></script>
    <script type="text/javascript">

        //function formatCurrency(value) {
        //    return "$" + value.toFixed(2);
        //}

        function OrderViewModel() {

            //Make the self as 'this' reference
            var self = this;
            //Declare observable which will be bind with UI
            self.Id = ko.observable("");
            self.Text = ko.observable("");
            self.Status = ko.observable("New");
            self.Email = ko.observable("");

            var Order = {
                Id: self.Id,
                Text: self.Text,
                Status: self.Status,
                Email: self.Email
            };

            self.Order = ko.observable();
            self.Orders = ko.observableArray(); // Contains the list of orders

            // Initialize the view-model
            $.ajax({
                url: '/api/Order/',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                beforeSend: function() {
                    $('#loader').show();
                },
                complete: function() {
                    $('#loader').hide();
                },
                success: function(data) {
                    self.Orders(data); //Put the response in ObservableArray
                }
            });

            //// Calculate Total of Status After Initialization
            //self.Total = ko.computed(function () {
            //    var sum = 0;
            //    var arr = self.Orders();
            //    for (var i = 0; i < arr.length; i++) {
            //        sum += arr[i].Status;
            //    }
            //    return sum;
            //});

            //Add New Item
            self.create = function() {
                Order.Id = '0';

                if (Order.Text() != "" && Order.Status() != "" && Order.Email() != "") {
                    $.ajax({
                        url: '/api/Order/',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Order),
                        beforeSend: function() {
                            $('#loader').show();
                        },
                        complete: function() {
                            $('#loader').hide();
                        },
                        success: function(data) {
                            // alert('added');
                            self.Orders.push(data);
                            self.Text("");
                            self.Status("New");
                            self.Email("");

                        }
                    }).fail(
                        function(xhr, textStatus, err) {
                            alert(xhr.responseText);
                        });

                } else {
                    alert('Please Enter All the Values !!');
                }

            }

            // Delete order details
            self.delete = function(order) {
                if (confirm('Are you sure to Delete "' + order.Text + '" order ??')) {
                    var id = order.Id;

                    $.ajax({
                        url: '/api/Order/' + id,
                        cache: false,
                        type: 'DELETE',
                        contentType: 'application/json; charset=utf-8',                       
                        beforeSend: function() {
                            $('#loader').show();
                        },
                        complete: function() {
                            $('#loader').hide();
                        },
                        success: function(data) {
                            self.Orders.remove(order);
                        }
                    }).fail(
                        function(xhr, textStatus, err) {
                            alert(err);
                        });
                }
            }

            // Edit order details
            self.edit = function(Order) {
                self.Order(Order);

            }

            // Update order details
            self.update = function() {
                var order = self.Order();

                $.ajax({
                        url: '/api/Order/' + order.Id,
                        cache: false,
                        type: 'PUT',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(order),
                        beforeSend: function() {
                            $('#loader').show();
                        },
                        complete: function() {
                            $('#loader').hide();
                        },
                        success: function(data) {
                            //self.Orders.removeAll();
                            self.Orders.remove(order);
                            self.Orders.push(order);
                            //self.Orders(data); //Put the response in ObservableArray
                            self.Order(null);
                            //alert("Record Updated Successfully");

                        }
                    })
                    .fail(
                        function(xhr, textStatus, err) {
                            alert(err);
                        });
            }


            // Reset order details
            self.reset = function() {
                self.Text("");
                self.Status("New");
                self.Email("");
            }

            // Cancel order details

            self.cancel = function() {
                self.Order(null);

            }
        }

        var viewModel = new OrderViewModel();
        ko.applyBindings(viewModel);

    </script>
}


<div id="body">

    <h2>Knockout CRUD Operations with MVC4</h2>

    <h3>List of Orders</h3>
    <div id="loader">
        <img alt="activity indicator" src="~/Images/ajax-loader.gif">
    </div>

    <table id="orders1" data-bind="visible: Orders().length > 0">
        <thead>
            <tr>
                <th>Id</th>
                <th>Text</th>
                <th>Email</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: Orders">
            <tr>
                <td data-bind="text: Id"></td>
                <td data-bind="text: Text"></td>
                <td data-bind="text: Email"></td>
                <td data-bind="text: Status"></td>

                <td>
                    <button data-bind="click: $root.edit">Edit</button>
                    <button data-bind="click: $root.delete">Delete</button>

                </td>

            </tr>
        </tbody>
       
    </table>
    <br />
    <div style="border-top: solid 2px  #282828; width: 430px; height: 10px">&nbsp;</div>

    <div data-bind="if: Order">
        <div>
            <h2>Update Order</h2>
        </div>
        <div>
            <label for="Id" data-bind="visible: false">Id</label>
            <label data-bind="text: Order().Id, visible: false"></label>

        </div>
        <div>
            <label for="name">Text</label>
            <input data-bind="value: Order().Text" type="text" title="Text" />
        </div>

        <div>
            <label for="email">Email</label>
            <input data-bind="value: Order().Email" type="text" title="Email" />
        </div>

        <div>
            <label for="status">Status</label>
            <input data-bind="value: Order().Status" type="text" title="Status" />

        </div>
        <br />
        <div>
            <button data-bind="click: $root.update">Update</button>
            <button data-bind="click: $root.cancel">Cancel</button>

        </div>
    </div>

    <div data-bind="ifnot: Order()">
        <div>
            <h2>Add New Order</h2>
        </div>
        <div>
            <label for="text">Text</label>
            <input data-bind="value: $root.Text" type="text" title="Text" />
        </div>

        <div>
            <label for="email">Email</label>
            <input data-bind="value: $root.Email" type="text" title="Email" />
        </div>

        <div>
            <label for="status">Status</label>
            <input data-bind="value: $root.Status" type="text" title="Status" value="New" />
        </div>
        <br />
        <div>
            <button data-bind="click: $root.create">Save</button>
            <button data-bind="click: $root.reset">Reset</button>

        </div>
    </div>

</div>




